# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.254.2', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                ]
  },
  
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },
  
  :inetRouter2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.254.1', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router2-net"},
                   {ip: '10.10.0.2', adapter: 3},
                ]
  },
  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "200"]
        end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/net.conf
            echo "192.168.0.0/24 via 192.168.255.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            service network restart
            iptables-restore < /vagrant/iptables.rules
            sed -i '66s/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            service sshd restart
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/net.conf
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            echo "10.10.0.0/24 via 192.168.254.1 dev eth3" >> /etc/sysconfig/network-scripts/route-eth3
            systemctl restart network
            yum -y install nmap
            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network
            yum -y install epel-release
            yum -y install nginx
            systemctl enable nginx
            systemctl start nginx
            SHELL
        when "inetRouter2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/net.conf
            echo "192.168.0.0/24 via 192.168.254.2 dev eth1" >> /etc/sysconfig/network-scripts/route-eth1
            systemctl restart network
            systemctl enable firewalld
            systemctl start firewalld
            firewall-cmd --permanent --zone=trusted --add-interface=eth0
            firewall-cmd --permanent --zone=trusted --add-masquerade
            firewall-cmd --permanent --zone=work --add-interface=eth1
            firewall-cmd --permanent --zone=public --add-interface=eth2
            firewall-cmd --permanent --zone=public --add-masquerade
            firewall-cmd --permanent --zone=public --add-forward-port=port=8080:proto=tcp:toport=80:toaddr=192.168.0.2
            firewall-cmd --reload
            SHELL
        end

      end

  end
  
  
end

