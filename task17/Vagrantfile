# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :inetrouter => {
            :box_name => "centos/6",
            #:public => {:ip => '10.10.10.1', :adapter => 1},
            :net => [
                       {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                    ]
    },
    
    :centralrouter => {
            :box_name => "centos/7",
            :net => [
                       {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                       {ip: '192.168.255.5', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router1-net"},
                       {ip: '192.168.255.9', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                       {ip: '192.168.0.1', adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "central-net"},
                    ]
    },

    :centralserver => {
        :box_name => "centos/7",
          :net => [
                      {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "central-net"},
                      {ip: '10.20.10.2', adapter: 3, netmask: "255.255.255.240"},
                  ]
    },

      
    :office1router => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.6', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router1-net"},
                   {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "dev1-net"},
                   {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "test1-net"},
                   {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "managers1-net"},
                   {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.192", virtualbox__intnet: "hw1-net"},
                ]
    },

    :office1server => {
                :box_name => "centos/7",
                :net => [
                        {ip: '192.168.2.66', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "test1-net"},
                        ]
    },

    :office2router => {
                :box_name => "centos/7",
                :net => [
                        {ip: '192.168.255.10', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                        {ip: '192.168.1.1', adapter: 3, netmask: "255.255.255.128", virtualbox__intnet: "dev2-net"},
                        {ip: '192.168.1.129', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "test2-net"},
                        {ip: '192.168.1.193', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "hw2-net"},
                        ]
    },

        :office2server => {
                :box_name => "centos/7",
                :net => [
                        {ip: '192.168.1.130', adapter: 2, netmask: "255.255.255.192", virtualbox__intnet: "test2-net"},
                        ]
        },
    }
    
    Vagrant.configure("2") do |config|
    
      MACHINES.each do |boxname, boxconfig|
    
        config.vm.define boxname do |box|
    
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s
    
            box.vm.provider :virtualbox do |vb|
              case boxname.to_s
              when "centralserver"
                vb.customize ["modifyvm", :id, "--memory", "2000"]
              else
                vb.customize ["modifyvm", :id, "--memory", "300"]
              end
            end
    
            boxconfig[:net].each do |ipconf|
              box.vm.network "private_network", ipconf
              # case boxname.to_s
              # when "centralserver"
              #   box.vm.network "forwarded_port", guest: 80, host: 8080 
              #   box.vm.network "forwarded_port", guest: 443, host: 8443 
              # end
            end
    
            config.vm.provision "ansible" do |ansible|
                # ansible.verbose = "vvv"
                ansible.playbook = "provisioning/site.yml"
                ansible.become = "true"
            end
        
        end
            
      end
    end
